name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo builds
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Set up Rust
        run: rustc --version && cargo --version
      - name: Build
        run: cargo build --release
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: target/release

  test:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Run Tests
        run: cargo test

  lint_format:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Clippy and Rustfmt
        run: rustup component add clippy rustfmt
      - name: Lint Code
        run: cargo clippy -- -D warnings
      - name: Check Formatting
        run: cargo fmt --check

  coverage:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run Coverage
        run: cargo tarpaulin --engine llvm --ignore-tests --out Xml
      - name: Upload Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: cobertura.xml

  docs_benchmark_audit:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate Documentation
        run: cargo doc --no-deps
      - name: Run Benchmarks
        run: cargo bench
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Run Security Audit
        run: cargo audit --json > gl-dependency-scanning-report.json
      - name: Upload Audit Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-scanning-report
          path: gl-dependency-scanning-report.json

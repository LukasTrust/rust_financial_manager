name: CI

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'

jobs:
  all_in_one:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      # Setup Rust environment and tools
      - name: Set up Rust
        run: |
          rustc --version
          cargo --version
          rustup component add clippy rustfmt
          cargo install cargo-tarpaulin cargo-audit
          cargo install diesel_cli --no-default-features --features postgres
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          apt-get update
          apt-get install -y postgresql postgresql-contrib

      # Configure PostgreSQL to use 'trust' authentication and set up database
      - name: Configure PostgreSQL and Setup Database
        run: |
          # Configure PostgreSQL to use 'trust' authentication
          sed -i "s/peer/trust/g" /etc/postgresql/*/main/pg_hba.conf
          sed -i "s/md5/trust/g" /etc/postgresql/*/main/pg_hba.conf
          service postgresql restart

          # Set PostgreSQL password
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'glpat-BYytBgysP3yeceKp6FUW';"

          # Create the database
          sudo -u postgres psql -c "CREATE DATABASE financial_manager;"

          # Apply migrations
          diesel migration run

      # Run tests
      - name: Run Tests
        env:
          DATABASE_URL: postgres://postgres:glpat-BYytBgysP3yeceKp6FUW@localhost:5432/financial_manager
          ROCKET_ENV: test
        run: cargo test

      # Lint and format code
      - name: Lint and Format
        run: |
          cargo clippy -- -D warnings
          cargo fmt --check

      # Run code coverage
      - name: Run Coverage
        run: cargo tarpaulin --engine llvm --ignore-tests --out Xml

      # Generate documentation, run benchmarks, and audit dependencies
      - name: Documentation, Benchmarks, and Audit
        run: |
          cargo doc --no-deps
          cargo bench
          cargo audit
